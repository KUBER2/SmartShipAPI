openapi: 3.0.0
info:
  title: SmartShip predictive maintenance API
  version: "1.0.0"
  description: API predictic maintnamce.

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: localhost:1301
    description: Development server on local mashine

paths:
  /report/{shipId}:
    description: "Ship predictive maintenance report"
    get:
      operationId: "get ship raport"
      summary: Return the predictive maintnace report
      tags:
        - Ship report
      description: Return the predictive maintnace report
      parameters:
        - name: shipId
          in: path
          required: true
          description: Ship id
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/ShipReportResponse"
        "400":
          $ref: "#/components/responses/400Error"
components:
  securitySchemes:
    BaisicAuth:
      type: http
      scheme: basic
  schemas:
    Metadata:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          example: "admin@smartship.eu"
        modifiedAt:
          type: string
          format: date-time
        modifiedBy:
          type: string
          example: "user@smartship.eu"
    ShipInformation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "Very Smart Ship"
        ownerId:
          type: string
          format: uuid
    PartPrediction:
      type: object
      properties:
        partId:
          type: string
          format: uuid
        daysToChange:
          type: number
          minimum: 0
          example: 213
        daysToService:
          type: number
          minimum: 0
          example: 213
        failureChance:
          type: number
          maximum: 100
          example: 21
    EngineReport:
      type: object
      properties:
        waterPump:
          $ref: "#/components/schemas/PartPrediction"
        airPump:
          $ref: "#/components/schemas/PartPrediction"
        cylinerInformation:
          type: array
          items:
            $ref: "#/components/schemas/PartPrediction"
  responses:
    ShipReportResponse:
      description: "Ship predictive maintenance report"
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
              metadata:
                $ref: "#/components/schemas/Metadata"
              engineReport:
                $ref: "#/components/schemas/EngineReport"
    400Error:
      description: Invalid request
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid request"
